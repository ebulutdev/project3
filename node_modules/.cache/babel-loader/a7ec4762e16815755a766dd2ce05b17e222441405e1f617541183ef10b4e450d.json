{"ast":null,"code":"// Analiz servisi - haftalık soru çözme istatistiklerini yönetir\nexport class AnalyticsService {\n  constructor() {\n    this.storageKey = 'weeklyAnalytics';\n    this.currentWeekKey = this.getCurrentWeekKey();\n  }\n\n  // Mevcut haftanın benzersiz anahtarını oluştur\n  getCurrentWeekKey() {\n    const now = new Date();\n    const startOfWeek = new Date(now);\n    startOfWeek.setDate(now.getDate() - now.getDay()); // Pazar günü\n    startOfWeek.setHours(0, 0, 0, 0);\n    return startOfWeek.toISOString().split('T')[0]; // YYYY-MM-DD formatında\n  }\n\n  // Haftalık analiz verilerini al\n  getWeeklyAnalytics() {\n    const data = localStorage.getItem(this.storageKey);\n    if (!data) return {};\n    try {\n      return JSON.parse(data);\n    } catch (error) {\n      console.error('Analiz verileri okunamadı:', error);\n      return {};\n    }\n  }\n\n  // Mevcut haftanın analiz verilerini al\n  getCurrentWeekAnalytics() {\n    const allAnalytics = this.getWeeklyAnalytics();\n    return allAnalytics[this.currentWeekKey] || this.getDefaultWeekData();\n  }\n\n  // Varsayılan hafta verisi\n  getDefaultWeekData() {\n    return {\n      weekStart: this.currentWeekKey,\n      totalQuestions: 0,\n      correctAnswers: 0,\n      wrongAnswers: 0,\n      subjects: {\n        matematik: {\n          total: 0,\n          correct: 0,\n          wrong: 0\n        },\n        fizik: {\n          total: 0,\n          correct: 0,\n          wrong: 0\n        },\n        kimya: {\n          total: 0,\n          correct: 0,\n          wrong: 0\n        },\n        biyoloji: {\n          total: 0,\n          correct: 0,\n          wrong: 0\n        },\n        turkce: {\n          total: 0,\n          correct: 0,\n          wrong: 0\n        },\n        tarih: {\n          total: 0,\n          correct: 0,\n          wrong: 0\n        },\n        cografya: {\n          total: 0,\n          correct: 0,\n          wrong: 0\n        },\n        felsefe: {\n          total: 0,\n          correct: 0,\n          wrong: 0\n        }\n      },\n      dailyStats: {\n        monday: {\n          total: 0,\n          correct: 0,\n          wrong: 0\n        },\n        tuesday: {\n          total: 0,\n          correct: 0,\n          wrong: 0\n        },\n        wednesday: {\n          total: 0,\n          correct: 0,\n          wrong: 0\n        },\n        thursday: {\n          total: 0,\n          correct: 0,\n          wrong: 0\n        },\n        friday: {\n          total: 0,\n          correct: 0,\n          wrong: 0\n        },\n        saturday: {\n          total: 0,\n          correct: 0,\n          wrong: 0\n        },\n        sunday: {\n          total: 0,\n          correct: 0,\n          wrong: 0\n        }\n      }\n    };\n  }\n\n  // Soru sonucunu kaydet\n  recordQuestionResult(subject, isCorrect, dayOfWeek = null) {\n    const allAnalytics = this.getWeeklyAnalytics();\n    let currentWeek = allAnalytics[this.currentWeekKey] || this.getDefaultWeekData();\n\n    // Genel istatistikleri güncelle\n    currentWeek.totalQuestions += 1;\n    if (isCorrect) {\n      currentWeek.correctAnswers += 1;\n    } else {\n      currentWeek.wrongAnswers += 1;\n    }\n\n    // Ders bazlı istatistikleri güncelle\n    if (currentWeek.subjects[subject]) {\n      currentWeek.subjects[subject].total += 1;\n      if (isCorrect) {\n        currentWeek.subjects[subject].correct += 1;\n      } else {\n        currentWeek.subjects[subject].wrong += 1;\n      }\n    }\n\n    // Günlük istatistikleri güncelle\n    if (dayOfWeek && currentWeek.dailyStats[dayOfWeek]) {\n      currentWeek.dailyStats[dayOfWeek].total += 1;\n      if (isCorrect) {\n        currentWeek.dailyStats[dayOfWeek].correct += 1;\n      } else {\n        currentWeek.dailyStats[dayOfWeek].wrong += 1;\n      }\n    }\n\n    // Veriyi kaydet\n    allAnalytics[this.currentWeekKey] = currentWeek;\n    localStorage.setItem(this.storageKey, JSON.stringify(allAnalytics));\n    return currentWeek;\n  }\n\n  // Net oranını hesapla\n  calculateNetScore(total, correct, wrong) {\n    if (total === 0) return 0;\n    return Math.round((correct - wrong * 0.25) / total * 100);\n  }\n\n  // Başarı oranını hesapla\n  calculateSuccessRate(correct, total) {\n    if (total === 0) return 0;\n    return Math.round(correct / total * 100);\n  }\n\n  // Tüm haftalık verileri al (geçmiş analizler için)\n  getAllWeeklyData() {\n    const allAnalytics = this.getWeeklyAnalytics();\n    return Object.keys(allAnalytics).sort().map(weekKey => ({\n      weekKey,\n      ...allAnalytics[weekKey]\n    }));\n  }\n\n  // Haftalık veriyi temizle (yeni hafta başlangıcında)\n  clearCurrentWeek() {\n    const allAnalytics = this.getWeeklyAnalytics();\n    delete allAnalytics[this.currentWeekKey];\n    localStorage.setItem(this.storageKey, JSON.stringify(allAnalytics));\n  }\n\n  // Hafta değişikliğini kontrol et ve gerekirse temizle\n  checkWeekChange() {\n    const newWeekKey = this.getCurrentWeekKey();\n    if (newWeekKey !== this.currentWeekKey) {\n      this.currentWeekKey = newWeekKey;\n      // Yeni hafta başladı, eski veriler korunur\n      return true;\n    }\n    return false;\n  }\n}\n\n// Singleton instance\nexport const analyticsService = new AnalyticsService();","map":{"version":3,"names":["AnalyticsService","constructor","storageKey","currentWeekKey","getCurrentWeekKey","now","Date","startOfWeek","setDate","getDate","getDay","setHours","toISOString","split","getWeeklyAnalytics","data","localStorage","getItem","JSON","parse","error","console","getCurrentWeekAnalytics","allAnalytics","getDefaultWeekData","weekStart","totalQuestions","correctAnswers","wrongAnswers","subjects","matematik","total","correct","wrong","fizik","kimya","biyoloji","turkce","tarih","cografya","felsefe","dailyStats","monday","tuesday","wednesday","thursday","friday","saturday","sunday","recordQuestionResult","subject","isCorrect","dayOfWeek","currentWeek","setItem","stringify","calculateNetScore","Math","round","calculateSuccessRate","getAllWeeklyData","Object","keys","sort","map","weekKey","clearCurrentWeek","checkWeekChange","newWeekKey","analyticsService"],"sources":["C:/Users/pc/OneDrive/Desktop/dersk/src/services/analyticsService.js"],"sourcesContent":["// Analiz servisi - haftalık soru çözme istatistiklerini yönetir\r\nexport class AnalyticsService {\r\n  constructor() {\r\n    this.storageKey = 'weeklyAnalytics';\r\n    this.currentWeekKey = this.getCurrentWeekKey();\r\n  }\r\n\r\n  // Mevcut haftanın benzersiz anahtarını oluştur\r\n  getCurrentWeekKey() {\r\n    const now = new Date();\r\n    const startOfWeek = new Date(now);\r\n    startOfWeek.setDate(now.getDate() - now.getDay()); // Pazar günü\r\n    startOfWeek.setHours(0, 0, 0, 0);\r\n    \r\n    return startOfWeek.toISOString().split('T')[0]; // YYYY-MM-DD formatında\r\n  }\r\n\r\n  // Haftalık analiz verilerini al\r\n  getWeeklyAnalytics() {\r\n    const data = localStorage.getItem(this.storageKey);\r\n    if (!data) return {};\r\n    \r\n    try {\r\n      return JSON.parse(data);\r\n    } catch (error) {\r\n      console.error('Analiz verileri okunamadı:', error);\r\n      return {};\r\n    }\r\n  }\r\n\r\n  // Mevcut haftanın analiz verilerini al\r\n  getCurrentWeekAnalytics() {\r\n    const allAnalytics = this.getWeeklyAnalytics();\r\n    return allAnalytics[this.currentWeekKey] || this.getDefaultWeekData();\r\n  }\r\n\r\n  // Varsayılan hafta verisi\r\n  getDefaultWeekData() {\r\n    return {\r\n      weekStart: this.currentWeekKey,\r\n      totalQuestions: 0,\r\n      correctAnswers: 0,\r\n      wrongAnswers: 0,\r\n      subjects: {\r\n        matematik: { total: 0, correct: 0, wrong: 0 },\r\n        fizik: { total: 0, correct: 0, wrong: 0 },\r\n        kimya: { total: 0, correct: 0, wrong: 0 },\r\n        biyoloji: { total: 0, correct: 0, wrong: 0 },\r\n        turkce: { total: 0, correct: 0, wrong: 0 },\r\n        tarih: { total: 0, correct: 0, wrong: 0 },\r\n        cografya: { total: 0, correct: 0, wrong: 0 },\r\n        felsefe: { total: 0, correct: 0, wrong: 0 }\r\n      },\r\n      dailyStats: {\r\n        monday: { total: 0, correct: 0, wrong: 0 },\r\n        tuesday: { total: 0, correct: 0, wrong: 0 },\r\n        wednesday: { total: 0, correct: 0, wrong: 0 },\r\n        thursday: { total: 0, correct: 0, wrong: 0 },\r\n        friday: { total: 0, correct: 0, wrong: 0 },\r\n        saturday: { total: 0, correct: 0, wrong: 0 },\r\n        sunday: { total: 0, correct: 0, wrong: 0 }\r\n      }\r\n    };\r\n  }\r\n\r\n  // Soru sonucunu kaydet\r\n  recordQuestionResult(subject, isCorrect, dayOfWeek = null) {\r\n    const allAnalytics = this.getWeeklyAnalytics();\r\n    let currentWeek = allAnalytics[this.currentWeekKey] || this.getDefaultWeekData();\r\n    \r\n    // Genel istatistikleri güncelle\r\n    currentWeek.totalQuestions += 1;\r\n    if (isCorrect) {\r\n      currentWeek.correctAnswers += 1;\r\n    } else {\r\n      currentWeek.wrongAnswers += 1;\r\n    }\r\n    \r\n    // Ders bazlı istatistikleri güncelle\r\n    if (currentWeek.subjects[subject]) {\r\n      currentWeek.subjects[subject].total += 1;\r\n      if (isCorrect) {\r\n        currentWeek.subjects[subject].correct += 1;\r\n      } else {\r\n        currentWeek.subjects[subject].wrong += 1;\r\n      }\r\n    }\r\n    \r\n    // Günlük istatistikleri güncelle\r\n    if (dayOfWeek && currentWeek.dailyStats[dayOfWeek]) {\r\n      currentWeek.dailyStats[dayOfWeek].total += 1;\r\n      if (isCorrect) {\r\n        currentWeek.dailyStats[dayOfWeek].correct += 1;\r\n      } else {\r\n        currentWeek.dailyStats[dayOfWeek].wrong += 1;\r\n      }\r\n    }\r\n    \r\n    // Veriyi kaydet\r\n    allAnalytics[this.currentWeekKey] = currentWeek;\r\n    localStorage.setItem(this.storageKey, JSON.stringify(allAnalytics));\r\n    \r\n    return currentWeek;\r\n  }\r\n\r\n  // Net oranını hesapla\r\n  calculateNetScore(total, correct, wrong) {\r\n    if (total === 0) return 0;\r\n    return Math.round(((correct - (wrong * 0.25)) / total) * 100);\r\n  }\r\n\r\n  // Başarı oranını hesapla\r\n  calculateSuccessRate(correct, total) {\r\n    if (total === 0) return 0;\r\n    return Math.round((correct / total) * 100);\r\n  }\r\n\r\n  // Tüm haftalık verileri al (geçmiş analizler için)\r\n  getAllWeeklyData() {\r\n    const allAnalytics = this.getWeeklyAnalytics();\r\n    return Object.keys(allAnalytics)\r\n      .sort()\r\n      .map(weekKey => ({\r\n        weekKey,\r\n        ...allAnalytics[weekKey]\r\n      }));\r\n  }\r\n\r\n  // Haftalık veriyi temizle (yeni hafta başlangıcında)\r\n  clearCurrentWeek() {\r\n    const allAnalytics = this.getWeeklyAnalytics();\r\n    delete allAnalytics[this.currentWeekKey];\r\n    localStorage.setItem(this.storageKey, JSON.stringify(allAnalytics));\r\n  }\r\n\r\n  // Hafta değişikliğini kontrol et ve gerekirse temizle\r\n  checkWeekChange() {\r\n    const newWeekKey = this.getCurrentWeekKey();\r\n    if (newWeekKey !== this.currentWeekKey) {\r\n      this.currentWeekKey = newWeekKey;\r\n      // Yeni hafta başladı, eski veriler korunur\r\n      return true;\r\n    }\r\n    return false;\r\n  }\r\n}\r\n\r\n// Singleton instance\r\nexport const analyticsService = new AnalyticsService();\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}